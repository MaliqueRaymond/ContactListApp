name: Full Test Suite Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cypress-tests:
    name: Run Cypress Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3  # Step 1: Checkout the latest version of your code

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Use Node.js 20 for compatibility

      - name: Install Dependencies
        run: npm install  # Install all dependencies for the project

      - name: Install Cypress
        run: npx cypress install  # Install Cypress for end-to-end testing

      - name: Run Cypress Tests
        run: npx cypress run  # Run Cypress tests
        continue-on-error: true  # Continue even if Cypress tests fail to collect artifacts

      - name: Upload Cypress Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-${{ github.run_id }}
          path: cypress/screenshots
          if-no-files-found: ignore

      - name: Upload Cypress Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos-${{ github.run_id }}
          path: cypress/videos
          if-no-files-found: ignore

  zap-scan:
    name: Run OWASP ZAP Baseline Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3  # Step 1: Checkout the latest version of your code

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.4.0  # Step 2: Use the OWASP ZAP Baseline Action
        with:
          target: 'https://thinking-tester-contact-list.herokuapp.com/'  # Replace with the URL of your application
          token: ${{ secrets.GITHUB_TOKEN }}  # Step 3: Authenticate to interact with GitHub safely
          fail_action: false  # Continue even if there are vulnerabilities detected

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4  # Step 4: Upload the ZAP scan report as an artifact
        with:
          name: zap-report
          path: /zap/wrk/*.html  # Upload the HTML report file generated by the scan
